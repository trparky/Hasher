name: Build & Release on Tag in Main

on:
  push:
    tags:
      - 'v*'  # Only triggers for tags like v4.2.2

jobs:
  build-and-release:
    runs-on: windows-latest
    defaults:
      run:
        shell: powershell

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Required for branch ancestry check

      - name: Ensure tag is on main branch
        run: |
          $tagCommit = (git rev-parse HEAD).Trim()
          $mainCommit = git merge-base $tagCommit origin/main

          if ($tagCommit -ne $mainCommit) {
            Write-Host "❌ Tag is not on the main branch. Skipping release."
            exit 1
          } else {
            Write-Host "✅ Tag is on the main branch. Continuing..."
          }

      - name: Extract version parts from tag
        id: version
        run: |
          $tag = "${{ github.ref_name }}"  # e.g., "v4.2.2"
          if ($tag -match '^v(\d+)\.(\d+)\.(\d+)$') {
            echo "MAJOR=$($matches[1])" >> $env:GITHUB_OUTPUT
            echo "MINOR=$($matches[2])" >> $env:GITHUB_OUTPUT
            echo "PATCH=$($matches[3])" >> $env:GITHUB_OUTPUT
          } else {
            Write-Error "❌ Tag format invalid. Must be v<major>.<minor>.<patch>"
            exit 1
          }

      - name: Install NuGet CLI
        run: choco install nuget.commandline --no-progress

      - name: Restore NuGet packages
        run: nuget restore "./Hasher.sln"

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.3

      - name: Build solution
        run: msbuild "./Hasher.sln" /m /p:Configuration=Release

      - name: Collect build outputs
        run: |
          if (Test-Path artifact) { Remove-Item artifact -Recurse -Force }
          New-Item -ItemType Directory -Path artifact

          Get-ChildItem -Path . -Recurse -Include *.exe,*.dll |
            Where-Object { $_.FullName -match '\\bin\\Release\\' } |
            Copy-Item -Destination artifact -Force

      - name: Create release.zip
        run: |
          if (Test-Path release.zip) { Remove-Item release.zip }
          Compress-Archive -Path artifact\* -DestinationPath release.zip

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Version ${{ steps.version.outputs.MAJOR }}.${{ steps.version.outputs.MINOR }} Build ${{ steps.version.outputs.PATCH }}
          tag_name: ${{ github.ref_name }}
          files: release.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
